"""
Шел 2021 год. Большая часть студентов, которых Вы когда-то помогли отобрать для поступления в университет,
успешно учится. В знак благодарности вам выделили личный кабинет, поскольку помощь оказалась неоценимой.
Отношения с коллегами стали крепче после тех дней. Кстати, о коллегах…
Однажды утром возле двери кабинета Вы встретились с зам. декана, который выглядел озадаченно.
После недолго объяснения стало понятно, что местный военкомат интресуется, сколько студентов мужского
пола являются военнообязанными (достигшими 18 лет). Нужно сформировать список этих студентов.
В качестве исходных данных вам предлагают лист, на котором написаны имена студентов, их пол и возраст.
К несчастью,  где-то по центру этого листа расположено огромное пятно от пролитого кофе, что испортило часть
записей. Единственное, что осталось нетронутым — имена
-------------------------------------------------------------------------------------------------------------
Вам нужно написать функцию get_inductees *
Функция get_inductees принимает 3 списка одинаковой длины. В первом списке (names) — имена студентов,
позволяющие их точно идентифицировать. Во втором (birthday_years) — год рождения. В третьем (genders) — пол студента.
Частично они отсутствуют ввиду испорченного листа бумаги. Функция возвращает список с именами студентов мужского пола,
которые достигли или могут достигнуть 18 лет в 2021 году, но при этом не старше 30 лет. Cтуденты, по которым
невозможно точно установить - попадают они в список или нет (из-за порчи данных), должны быть выведены отдельно.
Пример входных данных приведен ниже
"""

names = ["Vasya", "Alice", "Petya", "Jenny", "Fedya", "Viola", "Mark", "Chris", "Margo"]
birthday_years = [1962, 1995, 2006, None, None, None, None, 1998, 2001]
genders = ["Male", "Female", "Male", "Female", "Male", None, None, None, None]


def get_inductees(names: list, birthday_years: list, genders: list):
    men = []
    men_and_none = []
    unknow = []
    keys = ['name', 'birthday_years', 'genders']
    zipped = zip(names, birthday_years, genders)
    dicts = [dict(zip(keys, values)) for values in zipped]
    for i in dicts:
        if i["genders"] == None and i["birthday_years"] == None:
            unknow.append(i)
        elif i["genders"] == "Male" and i["birthday_years"] == None:
            men_and_none.append(i)
        elif i["genders"] == "Female":
            pass
        else:
            men_and_none.append(i)
    for i in men_and_none:
        try:
            date = i["birthday_years"]
            if not int(date) < 1991:
                men.append(i)
        except TypeError:
            unknow.append(i)
    return men


if __name__ == '__main__':
    result = get_inductees(names, birthday_years, genders)
    print(result)
